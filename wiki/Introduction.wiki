This is the homepage of customized sipXtapi library originally developed on SIP Foundry. The goal of this project is to produce a stable, commercially usable SDK for client side SIP applications. API is designed to be simple but usable to enable rapid development. It is distributed under GNU LGPL license.

= Stability =
It was reported by a user of customized sipXtapi that revision 28 can handle over 200 000 calls without a crash or noticable memory leak.

= Differences =

Main differences between customized and SIP Foundry version:
  * sipXtapi was heavily refactored, many bugs and memory leaks have been fixed, safer locking, fixed problems with conferences
  * slightly different API, more C like, C++ code is almost gone from header files
  * sipxcalllib was stripped of most unused code
  * GIPS (Global IP Sound) remnants have been removed from sipxtapi
  * removed many hard limits from underlying libraries, unlimited number of calls
  * parallel DNS lookups in Windows. SIP foundry version only supports 1 DNS lookup at time for all threads. For Linux, parallel lookups are untested but can be enabled.
  * support for multiple core processors in media processing library. Multiple audio encoding/decoding threads are supported.
  * in-band DTMF and RFC2833 DTMF decoders, separate play buffer/file notifications, pause/resume playback
  * adaptive jitter buffer (changes size depending on jitter), refactored jitter handling
  * packet loss concealment (PLC). When it finds a perfect match frame, it will use it to conceal up to 3 missing consecutive frames.
  * uses portaudio and portmixer projects instead of old internal driver. Uses directsound or windows multimedia in Windows and OSS, Alsa in Linux. Problems in Windows Vista were fixed.
  * API for getting audio energy - 2 methods are available - VU (Volume Unit) and PPM (Peak Program Meters). There is also API for setting/getting mic/wave/master volume/balance. Both mic & speaker can be muted.
  * very easy to build, no dependencies are required, everything is included
  * more secure code, usage of snprintf, snprintf_s in windows where possible, all old      code was checked and replaced
  * refactored event handling in sipxmedialib and sipxcalllib
  * based on revision 9963


= Communication =
There are several mailinglists available:
  * for developers, users - http://groups.google.com/group/sipxtapi
  * for commit messages - http://groups.google.com/group/sipxtapi-commits
 
 
 
 
 
 
 
 
 